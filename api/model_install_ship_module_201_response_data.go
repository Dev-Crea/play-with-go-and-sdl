/*
SpaceTraders API

SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   

API version: 2.3.0
Contact: joel@spacetraders.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InstallShipModule201ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallShipModule201ResponseData{}

// InstallShipModule201ResponseData struct for InstallShipModule201ResponseData
type InstallShipModule201ResponseData struct {
	Agent Agent `json:"agent"`
	Modules []ShipModule `json:"modules"`
	Cargo ShipCargo `json:"cargo"`
	Transaction InstallShipModule201ResponseDataTransaction `json:"transaction"`
}

type _InstallShipModule201ResponseData InstallShipModule201ResponseData

// NewInstallShipModule201ResponseData instantiates a new InstallShipModule201ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallShipModule201ResponseData(agent Agent, modules []ShipModule, cargo ShipCargo, transaction InstallShipModule201ResponseDataTransaction) *InstallShipModule201ResponseData {
	this := InstallShipModule201ResponseData{}
	this.Agent = agent
	this.Modules = modules
	this.Cargo = cargo
	this.Transaction = transaction
	return &this
}

// NewInstallShipModule201ResponseDataWithDefaults instantiates a new InstallShipModule201ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallShipModule201ResponseDataWithDefaults() *InstallShipModule201ResponseData {
	this := InstallShipModule201ResponseData{}
	return &this
}

// GetAgent returns the Agent field value
func (o *InstallShipModule201ResponseData) GetAgent() Agent {
	if o == nil {
		var ret Agent
		return ret
	}

	return o.Agent
}

// GetAgentOk returns a tuple with the Agent field value
// and a boolean to check if the value has been set.
func (o *InstallShipModule201ResponseData) GetAgentOk() (*Agent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Agent, true
}

// SetAgent sets field value
func (o *InstallShipModule201ResponseData) SetAgent(v Agent) {
	o.Agent = v
}

// GetModules returns the Modules field value
func (o *InstallShipModule201ResponseData) GetModules() []ShipModule {
	if o == nil {
		var ret []ShipModule
		return ret
	}

	return o.Modules
}

// GetModulesOk returns a tuple with the Modules field value
// and a boolean to check if the value has been set.
func (o *InstallShipModule201ResponseData) GetModulesOk() ([]ShipModule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modules, true
}

// SetModules sets field value
func (o *InstallShipModule201ResponseData) SetModules(v []ShipModule) {
	o.Modules = v
}

// GetCargo returns the Cargo field value
func (o *InstallShipModule201ResponseData) GetCargo() ShipCargo {
	if o == nil {
		var ret ShipCargo
		return ret
	}

	return o.Cargo
}

// GetCargoOk returns a tuple with the Cargo field value
// and a boolean to check if the value has been set.
func (o *InstallShipModule201ResponseData) GetCargoOk() (*ShipCargo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cargo, true
}

// SetCargo sets field value
func (o *InstallShipModule201ResponseData) SetCargo(v ShipCargo) {
	o.Cargo = v
}

// GetTransaction returns the Transaction field value
func (o *InstallShipModule201ResponseData) GetTransaction() InstallShipModule201ResponseDataTransaction {
	if o == nil {
		var ret InstallShipModule201ResponseDataTransaction
		return ret
	}

	return o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value
// and a boolean to check if the value has been set.
func (o *InstallShipModule201ResponseData) GetTransactionOk() (*InstallShipModule201ResponseDataTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transaction, true
}

// SetTransaction sets field value
func (o *InstallShipModule201ResponseData) SetTransaction(v InstallShipModule201ResponseDataTransaction) {
	o.Transaction = v
}

func (o InstallShipModule201ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallShipModule201ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agent"] = o.Agent
	toSerialize["modules"] = o.Modules
	toSerialize["cargo"] = o.Cargo
	toSerialize["transaction"] = o.Transaction
	return toSerialize, nil
}

func (o *InstallShipModule201ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agent",
		"modules",
		"cargo",
		"transaction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInstallShipModule201ResponseData := _InstallShipModule201ResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInstallShipModule201ResponseData)

	if err != nil {
		return err
	}

	*o = InstallShipModule201ResponseData(varInstallShipModule201ResponseData)

	return err
}

type NullableInstallShipModule201ResponseData struct {
	value *InstallShipModule201ResponseData
	isSet bool
}

func (v NullableInstallShipModule201ResponseData) Get() *InstallShipModule201ResponseData {
	return v.value
}

func (v *NullableInstallShipModule201ResponseData) Set(val *InstallShipModule201ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallShipModule201ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallShipModule201ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallShipModule201ResponseData(val *InstallShipModule201ResponseData) *NullableInstallShipModule201ResponseData {
	return &NullableInstallShipModule201ResponseData{value: val, isSet: true}
}

func (v NullableInstallShipModule201ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallShipModule201ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


